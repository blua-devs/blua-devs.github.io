{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is bLua? bLua is a plugin for Unity that allows C# code to easily interact with native Lua 5.4. That means running blazing fast Lua code with a single C# function. bLuaInstance inst = new bLuaInstance(); inst.DoString(\"blua.print('Hello world!')\"); It's also incredibly easy to mark C# classes as Lua user data so they can be accessed via Lua. [bLuaUserData] // Add this attribute to any C# class! public class Character { public int health = 100; public void Damage(dmg) { health -= dmg; } } inst.SetGlobal(\"char\", new Character()); inst.DoString(@\" char.Damage(10) print(char.health) \"); What makes bLua special? We run Lua code using native Lua, so your Lua script will run anywhere from 100 - 10,000 times faster than with plugins like Moonsharp ! Try our benchmarks yourself here . bLua is made specifically for Unity projects, so there are no extra steps for getting Lua integrated. Simply clone the bLua repository into your /Assets/Plugins/bLua folder. bLua also runs on the latest Lua (5.4), which is faster and has more features than other Lua plugins. Join our community on Discord ! Discord bLua is in ALPHA bLua is a relatively new open-source project being developed by a small team of Lua lovers. We're still finishing our interop with native Lua and adding all of the useful features we feel necessary for ease of use and parity with competing plugins. As of writing this (3/17/2023) bLua is completely functional (check out our example project !) but hasn't been user or developer tested. How can I help? If you know Unity's C# and Lua's C API, you can join our Discord community or reach out to tyster#0001 to inquire about joining the contributor team. We have an organized list of desired features and bug fixes that we call Bounties that any contributors can grab and start working on. Contributors are listed on the website as thanks for their contributions. Wanna help other ways? Encourage others to check us out! Drop a star on our main github repository ! Point out bugs and make feature requests in our Discord! Contributors Tyster and the team at World to Build actively maintain and upgrade bLua so it can power Lua scripts in over 2,500 user-created World to Build games. Denivarius and the team at DMHub created the original native Lua interop that became bLua and actively assist in the development of new features.","title":"Home"},{"location":"#what-is-blua","text":"bLua is a plugin for Unity that allows C# code to easily interact with native Lua 5.4. That means running blazing fast Lua code with a single C# function. bLuaInstance inst = new bLuaInstance(); inst.DoString(\"blua.print('Hello world!')\"); It's also incredibly easy to mark C# classes as Lua user data so they can be accessed via Lua. [bLuaUserData] // Add this attribute to any C# class! public class Character { public int health = 100; public void Damage(dmg) { health -= dmg; } } inst.SetGlobal(\"char\", new Character()); inst.DoString(@\" char.Damage(10) print(char.health) \");","title":"What is bLua?"},{"location":"#what-makes-blua-special","text":"We run Lua code using native Lua, so your Lua script will run anywhere from 100 - 10,000 times faster than with plugins like Moonsharp ! Try our benchmarks yourself here . bLua is made specifically for Unity projects, so there are no extra steps for getting Lua integrated. Simply clone the bLua repository into your /Assets/Plugins/bLua folder. bLua also runs on the latest Lua (5.4), which is faster and has more features than other Lua plugins.","title":"What makes bLua special?"},{"location":"#join-our-community-on-discord","text":"Discord","title":"Join our community on Discord!"},{"location":"#blua-is-in-alpha","text":"bLua is a relatively new open-source project being developed by a small team of Lua lovers. We're still finishing our interop with native Lua and adding all of the useful features we feel necessary for ease of use and parity with competing plugins. As of writing this (3/17/2023) bLua is completely functional (check out our example project !) but hasn't been user or developer tested.","title":"bLua is in ALPHA"},{"location":"#how-can-i-help","text":"If you know Unity's C# and Lua's C API, you can join our Discord community or reach out to tyster#0001 to inquire about joining the contributor team. We have an organized list of desired features and bug fixes that we call Bounties that any contributors can grab and start working on. Contributors are listed on the website as thanks for their contributions. Wanna help other ways? Encourage others to check us out! Drop a star on our main github repository ! Point out bugs and make feature requests in our Discord!","title":"How can I help?"},{"location":"#contributors","text":"Tyster and the team at World to Build actively maintain and upgrade bLua so it can power Lua scripts in over 2,500 user-created World to Build games. Denivarius and the team at DMHub created the original native Lua interop that became bLua and actively assist in the development of new features.","title":"Contributors"},{"location":"downloads/","text":"Downloads Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. Unity Package There is no Unity Package or Unity Asset Store asset available at the moment. You can directly grab the bLua source code from the /Plugins/bLua folder in the example project here . See Gettings started > Installation on this website for more details. Example Project https://github.com/blua-devs/blua-example Join our community on Discord ! Discord","title":"Downloads"},{"location":"downloads/#downloads","text":"Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong.","title":"Downloads"},{"location":"downloads/#unity-package","text":"There is no Unity Package or Unity Asset Store asset available at the moment. You can directly grab the bLua source code from the /Plugins/bLua folder in the example project here . See Gettings started > Installation on this website for more details.","title":"Unity Package"},{"location":"downloads/#example-project","text":"https://github.com/blua-devs/blua-example","title":"Example Project"},{"location":"downloads/#join-our-community-on-discord","text":"Discord","title":"Join our community on Discord!"},{"location":"installation/","text":"Installation Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. The most recent version of bLua is accessible via the example project in the Plugins folder. You can clone the repository to get a copy of the example project and manually copy+paste the /Plugins/bLua folder into your Unity project. You may get an error in the console letting you know that there is usage of the unsafe keyword in bLua's code, you can remedy this by going into your project settings and allowing unsafe code. Join our community on Discord ! Discord","title":"Installation"},{"location":"installation/#installation","text":"Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. The most recent version of bLua is accessible via the example project in the Plugins folder. You can clone the repository to get a copy of the example project and manually copy+paste the /Plugins/bLua folder into your Unity project. You may get an error in the console letting you know that there is usage of the unsafe keyword in bLua's code, you can remedy this by going into your project settings and allowing unsafe code.","title":"Installation"},{"location":"installation/#join-our-community-on-discord","text":"Discord","title":"Join our community on Discord!"},{"location":"running-lua/","text":"Running Lua Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. To run Lua code, you simply need to create a bLuaInstance with settings of your choice, or leave the constructor empty if you want to use default settings. Once you've created a bLua instance, you can run Lua code with the DoString function. DoBuffer and ExecBuffer are available for more advanced usage. bLuaInstance inst = new bLuaInstance(); inst.DoString(\"blua.print('Hello world!')\"); To run multiple lines of manually-typed Lua code, you can begin your string with the @ symbol: inst.DoString(@\" a = 10 b = 5 function Test() blua.print(a + b) end Test() \"); Join our community on Discord ! Discord","title":"Running Lua"},{"location":"running-lua/#running-lua","text":"Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. To run Lua code, you simply need to create a bLuaInstance with settings of your choice, or leave the constructor empty if you want to use default settings. Once you've created a bLua instance, you can run Lua code with the DoString function. DoBuffer and ExecBuffer are available for more advanced usage. bLuaInstance inst = new bLuaInstance(); inst.DoString(\"blua.print('Hello world!')\"); To run multiple lines of manually-typed Lua code, you can begin your string with the @ symbol: inst.DoString(@\" a = 10 b = 5 function Test() blua.print(a + b) end Test() \");","title":"Running Lua"},{"location":"running-lua/#join-our-community-on-discord","text":"Discord","title":"Join our community on Discord!"},{"location":"user-data/","text":"User Data Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. To mark C# classes, properties, and functions as Lua user data, you simply need to add the bLuaUserData attribute to the class containing the desired user data. This will make the class a new type of user data that Lua recognizes, and will allow Lua to access properties and functions on any instances of that class in Lua. [bLuaUserData] public class Character { public int health; public void Damage(dmg) { health -= dmg; } } To hide certain properties or functions from being marked as Lua user data, you can use the bLuaHidden attribute. [bLuaUserData] public class Sword { public int damage; [bLuaHidden] public void DebugPrintDamage() { Debug.Log(damage); } } A technique you might find particularly useful is making a class that is then set as a global variable in your Lua instance. This can be helpful for global functions and Lua taking that first step to affecting C# data. [bLuaUserData] public class GlobalFunctionLibrary { public Character NewCharacter() { return new Character(); } } // bLuaInstance inst = new bLuaInstance(); // inst.SetGlobal(\"global\", new GlobalFunctionLibrary()); // inst.DoString(@\" // local char = global.NewCharacter() // blua.print(char.health) // \"); Join our community on Discord ! Discord","title":"User Data"},{"location":"user-data/#user-data","text":"Documentation is in ALPHA and is not as verbose as the beta or final release will be. Some minor details might be wrong. To mark C# classes, properties, and functions as Lua user data, you simply need to add the bLuaUserData attribute to the class containing the desired user data. This will make the class a new type of user data that Lua recognizes, and will allow Lua to access properties and functions on any instances of that class in Lua. [bLuaUserData] public class Character { public int health; public void Damage(dmg) { health -= dmg; } } To hide certain properties or functions from being marked as Lua user data, you can use the bLuaHidden attribute. [bLuaUserData] public class Sword { public int damage; [bLuaHidden] public void DebugPrintDamage() { Debug.Log(damage); } } A technique you might find particularly useful is making a class that is then set as a global variable in your Lua instance. This can be helpful for global functions and Lua taking that first step to affecting C# data. [bLuaUserData] public class GlobalFunctionLibrary { public Character NewCharacter() { return new Character(); } } // bLuaInstance inst = new bLuaInstance(); // inst.SetGlobal(\"global\", new GlobalFunctionLibrary()); // inst.DoString(@\" // local char = global.NewCharacter() // blua.print(char.health) // \");","title":"User Data"},{"location":"user-data/#join-our-community-on-discord","text":"Discord","title":"Join our community on Discord!"}]}